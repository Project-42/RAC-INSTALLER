# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
cdrom
lang en_GB.UTF-8
keyboard uk
network --onboot yes --device eth0 --ip=192.168.0.14 --gateway=192.168.0.1 --netmask=255.255.255.0
#Welcome1
rootpw  --iscrypted $6$YaQ0a6LJVZIza.ga$Sxk3WyOvy4s6qsNIvqcHs8DP3pQIFRedMqhLBn1gUD3Pm9zmlkaunN7PNTi3/zfjD3ZKOf.rG9BLlDPodme1N1
firewall --disabled
authconfig --enableshadow --passalgo=sha512
selinux --disabled
timezone --utc Europe/London
bootloader --location=mbr --driveorder=vda --append="crashkernel=auto quiet"

skipx
text
reboot

zerombr
#clearpart --linux --drives=vda
clearpart --all --initlabel

#disk size created in the VM = 300GB

part /boot --fstype=ext2 --size=500 --ondisk=vda
part pv.008002 --grow --size=1 --ondisk=vda

volgroup vg_nfs --pesize=4096 pv.008002
logvol /home --fstype=ext4 --name=lv_home --vgname=vg_nfs --size=50
logvol / --fstype=ext4 --name=lv_root --vgname=vg_nfs --size=295600
logvol swap --name=lv_swap --vgname=vg_nfs --size=6944


%packages
@base
@core
@Development Tools
pax
python-dmidecode
sgpio
device-mapper-persistent-data
lksctp-tools
screen
tree
binutils
compat-libcap1 
compat-libstdc++-33 
gcc 
gcc-c++ 
glibc 
glibc-devel 
ksh 
libgcc 
make 
sysstat 
perl-TermReadKey
nfs-utils
expect
kernel-devel
zlib-devel
libuuid-devel
libattr-devel
libblkid-devel
libselinux-devel
libudev-devel
openssl-devel
nfs-utils
nfs-utils-lib
compat-libcap1
compat-libstdc++-33
elfutils-libelf
elfutils-libelf-devel
gcc
gcc-c++
glibc
glibc-common
glibc-devel
glibc-headers
ksh
libaio
libaio-devel
libgcc
libstdc++ 
libstdc++-devel
make
libXext
libXtst
libX11 
libXau 
libxcb 
libXi 
sysstat 
unixODBC 
unixODBC-devel
qemu-img
nc

%end

%post --log=/root/ks-post.log

myparams=`cat /proc/cmdline`
for i in $myparams;
        do
        case "$i" in *=*)
                myparam=`echo $i| cut -d= -f1`
                myval=`echo $i| cut -d= -f2`
                case "$myparam" in
                        "nodename")
                                nodename=$myval
				mynode=`echo $myval|grep -o '.\{1\}$'`
		;;
                        "racname")
                                racname=$myval
				;;
                        "network")
                                network=$myval
				mynetwork=`echo $myval|grep -o '.\{1\}$'`
                                myip=`echo $nodename|grep -o '.\{1\}$'`
                                #echo "my network is $myval" >> /root/pre.log
                                #echo "my ip is 192.168.$mynetwork.$myip" >> /root/pre.log
                ;;
 	
                esac

        esac
done


/sbin/chkconfig auditd off
/sbin/chkconfig postfix off
/sbin/chkconfig iptables off
/sbin/chkconfig ip6tables off
/sbin/chkconfig kdump off
/sbin/chkconfig ntpd off
/sbin/chkconfig sshd on

touch /tmp/firstboot

sed -i 's/ rhgb quiet/ quiet/g' /boot/grub/grub.conf

#sed -i '/hiddenmenu/a serial --unit=1 --speed=115200 --word=8 --parity=no --stop=1 \nterminal --timeout=5 serial console' /boot/grub/grub.conf
#sed -i '/never/a console=tty0 console=ttyS0,115200n8' /boot/grub/grub.conf


cat << EOF >> /etc/sysctl.conf
kernel.shmmax = 4294967295
kernel.shmall = 2097152
fs.aio-max-nr = 1048576
fs.file-max = 6815744
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576
EOF


rm -f /etc/security/limits.d/90-nproc.conf
cat << EOF >> /etc/security/limits.d/90-nproc.conf
* - nproc 16384
root soft nproc unlimited
EOF


rm -f /etc/issue /etc/issue.net
 
cat << EOF >> /etc/issue

 ***********************************************************************
 * 							               *
 * Access to this computer system is limited to authorised users only. *
 *								       *
 ***********************************************************************

EOF
 
cp /etc/issue /etc/issue.net


#sed -i 's/ rhgb quiet/ quiet/g' /boot/grub/grub.conf

#sed '/hiddenmenu/a serial --unit=1 --speed=115200 --word=8 --parity=no --stop=1 \nterminal --timeout=5 serial console' /mnt/sysimage/boot/grub/grub.conf
#sed '/quiet/a console=tty0 console=ttyS1,115200n8' /mnt/sysimage/boot/grub/grub.conf

echo "ttyS0" >> /etc/securetty

cat << EOF > /etc/init/ttyS0.conf
start on runlevel [345]
stop on runlevel [S016]
 
respawn
instance /dev/ttyS0
exec /sbin/agetty ttyS0 115200 vt100-nav
EOF

rm -f /etc/yum.repos.d/*.repo
cat << EOF > /etc/yum.repos.d/local.repo
[local_repo]
name=Oracle Linux 6.5
baseurl=http://192.168.$mynetwork.97/ol65
gpgcheck=0
enabled=1
EOF


## hostname eg rac1-node1
cat << EOF > /etc/hosts
127.0.0.1 localhost.localdomain localhost
::1 localhost.localdomain localhost
192.168.$mynetwork.101 $racname-node1-nfs$mynode.raclab.local $racname-node1-nfs$mynode
192.168.$mynetwork.102 $racname-node2-nfs$mynode.raclab.local $racname-node2-nfs$mynode
192.168.$mynetwork.103 $racname-node3-nfs$mynode.raclab.local $racname-node3-nfs$mynode
192.168.$mynetwork.11$mynode $racname-nfs$mynode.raclab.local $racname-nfs$mynode
EOF

sed -i "/HOSTNAME/c\HOSTNAME=$racname-nfs$mynode.raclab.local" /etc/sysconfig/network

## MAC = 52:54:00:$mynetwork:$mynode:ID. the ID will serve to assign an IP on the DHCP server on the KVM host

mac1="52:54:00:$mynetwork:$mynode""f:4"
/sbin/ifconfig eth0 hw ether $mac1

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
MACADDR=$mac1
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=dhcp
EOF


echo > /etc/udev/rules.d/70-persistent-net.rules

#dd if=/dev/zero of=$nfsharedir/nfs$mynode-disk1 bs=1M count=25600
#dd if=/dev/zero of=$nfsharedir/nfs$mynode-disk2 bs=1M count=25600
#dd if=/dev/zero of=$nfsharedir/nfs$mynode-disk3 bs=1M count=25600
#dd if=/dev/zero of=$nfsharedir/nfs$mynode-disk4 bs=1M count=25600


sed -i '/GSSAPIAuthentication yes/c\GSSAPIAuthentication no' /etc/ssh/sshd_config
#echo "UseDNS no" >> /etc/ssh/sshd_config


cat << EOF > /etc/resolv.conf
nameserver 192.168.$mynetwork.97
EOF

chattr +i /etc/resolv.conf


### users and dirs
/usr/sbin/groupadd -g 54321 oinstall

/usr/sbin/useradd -u 54321 -g oinstall oracle
echo Welcome1 | passwd oracle --stdin

nfsharedir=/nfsshares
mkdir $nfsharedir

## create 12 8GB disk = 96 GB per NFS
for i in {1..12}
do
qemu-img create -f raw ${nfsharedir}/nfs${mynode}-disk${i} 8G
done

#chmod =rwx,g+s $nfsharedir
chown oracle:oinstall -R $nfsharedir
chmod 0660 -R $nfsharedir

#echo "$nfsharedir 192.168.$mynetwork.96/27(rw,sync,no_wdelay,insecure_locks,no_root_squash) " > /etc/exports
echo "$nfsharedir 192.168.$mynetwork.96/27(rw,insecure_locks,no_root_squash) " > /etc/exports

/etc/init.d/nfs restart

chkconfig --levels 2345 nfs on
chkconfig --levels 2345 sshd on

