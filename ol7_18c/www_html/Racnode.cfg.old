# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
cdrom
lang en_GB.UTF-8
keyboard uk
network --onboot yes --device eth0 --ip=192.168.0.10 --gateway=192.168.0.1 --netmask=255.255.255.0
#Welcome1
rootpw  --iscrypted $6$YaQ0a6LJVZIza.ga$Sxk3WyOvy4s6qsNIvqcHs8DP3pQIFRedMqhLBn1gUD3Pm9zmlkaunN7PNTi3/zfjD3ZKOf.rG9BLlDPodme1N1
firewall --disabled
authconfig --enableshadow --passalgo=sha512
selinux --disabled
timezone --utc Europe/London
bootloader --location=mbr --driveorder=vda --append="crashkernel=auto quiet"

skipx
text
reboot

zerombr
clearpart --linux --drives=vda

#disk size created in the VM = 200GB
part /boot --fstype=ext2 --size=500
part pv.008002 --grow --size=1

volgroup vg_oracle18c --pesize=4096 pv.008002
logvol /home --fstype=ext4 --name=lv_home --vgname=vg_oracle18c --size=50000
logvol / --fstype=ext4 --name=lv_root --vgname=vg_oracle18c --size=140000
logvol swap --name=lv_swap --vgname=vg_oracle18c --size=6944

%pre --log=/root/pre.log
myparams=`cat /proc/cmdline`
for i in $myparams;
        do
        case "$i" in *=*)
                myparam=`echo $i| cut -d= -f1`
                myval=`echo $i| cut -d= -f2`
                case "$myparam" in
                        "nodename")
                                nodename=$myval
				echo "my nodename is $myval" >> /root/pre.log
				;;
                        "racname")
                                racname=$myval
				echo "my RAC name is $myval" >> /root/pre.log
				;;
                        "role")
                                role=$myval
				echo "my role is $myval" >> /root/pre.log
                	;;
			"totalnodes")
                                totalnodes=$myval
                                echo "total nodes $myval" >> /root/pre.log
                        ;;
			"storage")
                                nfservers=$myval
                                echo "total NFS servers $myval" >> /root/pre.log
                        ;;

			"network")
                                network=$myval
				mynetwork=`echo $myval|grep -o '.\{1\}$'`
				myip=`echo $nodename|grep -o '.\{1\}$'`
				echo "my network is $myval" >> /root/pre.log
				echo "my ip is 192.168.$mynetwork.$myip" >> /root/pre.log
                ;;
                esac
        esac

done
%end

%packages
@base

bc 
binutils 
compat-libcap1 
compat-libstdc++-33 
compat-libstdc++-33.i686 
elfutils-libelf.i686 
elfutils-libelf 
elfutils-libelf-devel.i686 
elfutils-libelf-devel 
fontconfig-devel 
glibc.i686 
glibc 
glibc-devel.i686 
glibc-devel 
ksh 
libaio.i686 
libaio 
libaio-devel.i686 
libaio-devel 
libX11.i686 
libX11 
libXau.i686 
libXau 
libXi.i686 
libXi 
libXtst.i686 
libXtst 
libgcc.i686 
libgcc 
librdmacm-devel 
libstdc++.i686 
libstdc++ 
libstdc++-devel.i686 
libstdc++-devel 
libxcb.i686 
libxcb 
make 
nfs-utils 
net-tools 
python 
python-configshell 
python-rtslib 
smartmontools 
sysstat 
unixODBC
binutils.x86_64
compat-db43.i686
compat-glibc-headers.x86_64
compat-glibc.x86_64
compat-libcap1.x86_64
compat-libstdc++-33.i686
compat-libstdc++-33.x86_64
elfutils-libelf-devel.x86_64
gcc-c++.x86_64
gcc.x86_64
gdbm.i686
gdbm.x86_64
glibc-common.x86_64
glibc-devel.i686
glibc-devel.x86_64
glibc-headers.x86_64
glibc.i686
glibc.x86_64
kernel-headers
ksh.x86_64
libaio-devel.i686
libaio-devel.x86_64
libaio.i686
libaio.x86_64
libgcc.i686
libgcc.x86_64
libgomp.x86_64
libstdc++-devel.i686
libstdc++-devel.x86_64
libstdc++.i686
libstdc++.x86_64
libXi.i686
libXp.i686
libXp.x86_64
libXtst
make.x86_64
mksh.x86_64
ncompress
portmap
nfs-utils
cifs-utils
nfs4-acl-tools
perl-TermReadKey
sysstat.x86_64
unixODBC-devel.i686
unixODBC-devel.x86_64
unixODBC.i686
unixODBC.x86_64
unzip.x86_64
util-linux-ng.x86_64
xauth
tuned
expect
oracleasm
oracleasm-support
nc

%end

%post --log=/root/ks-post.log


myparams=`cat /proc/cmdline`
for i in $myparams;
        do
        case "$i" in *=*)
                myparam=`echo $i| cut -d= -f1`
                myval=`echo $i| cut -d= -f2`
                case "$myparam" in
                        "nodename")
                                nodename=$myval
				mynode=`echo $myval|grep -o '.\{1\}$'`
		;;
                        "racname")
                                racname=$myval
				;;
                        "role")
                                role=$myval
                ;;
			"totalnodes")
                                totalnodes=$myval
                        ;;
			"storage")
                                nfservers=$myval
                                echo "total NFS servers $myval" >> /root/pre.log
                        ;;

                        "network")
                                network=$myval
				mynetwork=`echo $myval|grep -o '.\{1\}$'`
                                myip=`echo $nodename|grep -o '.\{1\}$'`
                                #echo "my network is $myval" >> /root/pre.log
                                #echo "my ip is 192.168.$mynetwork.$myip" >> /root/pre.log
                ;;
                esac

        esac
done

/sbin/chkconfig auditd off
/sbin/chkconfig postfix off
/sbin/chkconfig iptables off
/sbin/chkconfig ip6tables off
/sbin/chkconfig kdump off
/sbin/chkconfig ntpd off
/sbin/chkconfig sshd on


ORAOWNER=oracle
ORAINSTGROUP=oinstall

touch /tmp/firstboot

sed -i 's/ rhgb quiet/ quiet/g' /boot/grub/grub.conf

#sed -i '/hiddenmenu/a serial --unit=1 --speed=115200 --word=8 --parity=no --stop=1 \nterminal --timeout=5 serial console' /boot/grub/grub.conf
#sed -i '/never/a console=tty0 console=ttyS0,115200n8' /boot/grub/grub.conf


cat << EOF >> /etc/security/limits.d/99-grid-oracle-limits-18c.conf
oracle soft nofile 65536
oracle hard nofile 65536
oracle soft nproc 16384
oracle hard nproc 16384
oracle soft stack 10240
oracle hard stack 32768
oracle hard memlock 134217728
oracle soft memlock 134217728
EOF


rm -f /etc/issue /etc/issue.net
 
cat << EOF >> /etc/issue

 ***********************************************************************
 * 							               *
 * Access to this computer system is limited to authorised users only. *
 *								       *
 ***********************************************************************

EOF
 
cp /etc/issue /etc/issue.net


#sed -i 's/ rhgb quiet/ quiet/g' /boot/grub/grub.conf

#sed '/hiddenmenu/a serial --unit=1 --speed=115200 --word=8 --parity=no --stop=1 \nterminal --timeout=5 serial console' /mnt/sysimage/boot/grub/grub.conf
#sed '/quiet/a console=tty0 console=ttyS1,115200n8' /mnt/sysimage/boot/grub/grub.conf

echo "ttyS0" >> /etc/securetty

cat << EOF > /etc/init/ttyS0.conf
start on runlevel [345]
stop on runlevel [S016]
 
respawn
instance /dev/ttyS0
exec /sbin/agetty ttyS0 115200 vt100-nav
EOF

rm -f /etc/yum.repos.d/*.repo
cat << EOF > /etc/yum.repos.d/local.repo
[local_repo]
name=Oracle Linux 6.5
baseurl=http://192.168.$mynetwork.1/ol65
gpgcheck=0
enabled=1
EOF


#*****************************************

### users and dirs
/usr/sbin/groupadd -g 54321 ${ORAINSTGROUP}

/usr/sbin/useradd -u 54321 -g ${ORAINSTGROUP} -c "oracle software owner" -m -d /home/${ORAOWNER} -s /bin/bash ${ORAOWNER}
echo ${ORAOWNER} | passwd Welcome1 --stdin


#su - ${ORAOWNER} -c "mkdir /home/oracle/.ssh"

#mkdir /root/.ssh
#****************************************

## hostname eg rac1-node1
cat << EOF > /etc/hosts
127.0.0.1 localhost.localdomain localhost
::1 localhost.localdomain localhost
EOF

for i in `seq 1 $totalnodes`
do
echo "192.168.$mynetwork.1$i $racname-node$i.raclab.local $racname-node$i" >> /etc/hosts
done

#*****************************************
if [ "$role" == "RACdirector" ];then

wget http://192.168.$mynetwork.1/scriptInstallGRID18c-rac-2 -P /root
wget http://192.168.$mynetwork.1/scriptInstallDB18c-rac-2 -P /root
wget http://192.168.$mynetwork.1/sshUserSetup.expect -P /root
chmod +x /root/scriptInstallGRID18c-rac-2 
chmod +x /root/scriptInstallDB18c-rac-2 
chmod +x /root/sshUserSetup.expect

for i in `seq 1 $totalnodes`
do
  echo "$racname-node$i" >> /root/nodestossh
done

# mandatory for grid 12.1.0.2.0
echo "inventory_loc=/u01/app/oraInventory
inst_group=${ORAINSTGROUP}
" > /etc/oraInst.loc
chown oracle:oinstall /etc/oraInst.loc
chmod 640 /etc/oraInst.loc


echo "#!/bin/bash
if [ -f "/tmp/firstboot" ]; then
#rm -rf /tmp/firstboot
/root/scriptInstallGRID18c-rac-2 $racname $mynetwork
fi
" > /etc/init.d/grid18Install
chmod +x /etc/init.d/grid18Install

echo "#!/bin/bash
if [ -f "/tmp/firstboot" ]; then
rm -rf /tmp/firstboot
/root/scriptInstallDB18c-rac-2 $racname $mynetwork
fi
" > /etc/init.d/db18Install
chmod +x /etc/init.d/db18Install


fi
#*****************************************

for i in `seq 1 $nfservers`
do
mkdir -p /u01/oradata/nfs${i}
#echo "192.168.1.11$i:/nfsshares /u01/oradata nfs rw,bg,hard,nointr,tcp,vers=3,timeo=600,rsize=32768,wsize=32768,actimeo=0 0 0" >> /etc/fstab
echo "192.168.$mynetwork.11$i:/nfsshares /u01/oradata/nfs${i} nfs rw,bg,hard,nointr,tcp,vers=3,timeo=600,rsize=32768,wsize=32768,actimeo=0 0 0" >> /etc/fstab
done

#*****************************************

TOPDIR=/u01
mkdir -p $TOPDIR/oradata $TOPDIR/app/18.0.0/grid $TOPDIR/app/oracle 
chown -R ${ORAOWNER}:${ORAINSTGROUP} $TOPDIR
chmod -R 775 -R $TOPDIR

mount -a

#sed -i '/HOSTNAME/c\HOSTNAME=$nodename.raclab.local' /etc/hosts
sed -i "/HOSTNAME/c\HOSTNAME=$racname-$nodename.raclab.local" /etc/sysconfig/network

## MAC = 52:54:00:$mynetwork:$mynode:ID. the ID will serve to assign an IP on the DHCP server on the KVM host

mac1="52:54:00:$mynetwork:$mynode:1"
/sbin/ifconfig eth0 hw ether $mac1

## we create a nic and an alias for the 2X IP
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
MACADDR=$mac1 
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=dhcp
USERCTL=no  
IPV6INIT=no  
NM_CONTROLLED=no
EOF


mac3="52:54:00:$mynetwork:$mynode:3"
/sbin/ifconfig eth1 hw ether $mac3

# PRIVATE NETWORK
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth1
DEVICE=eth1
MACADDR=$mac3
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=dhcp
USERCTL=no
IPV6INIT=no
NM_CONTROLLED=no
EOF



mac4="52:54:00:$mynetwork:$mynode:4"
/sbin/ifconfig eth2 hw ether $mac4

# STORAGE NETWORK
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth2
DEVICE=eth2
MACADDR=$mac4
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=dhcp
USERCTL=no
IPV6INIT=no
NM_CONTROLLED=no
EOF

echo > /etc/udev/rules.d/70-persistent-net.rules


cat << EOF > /etc/resolv.conf
nameserver 192.168.$mynetwork.1
EOF

chattr +i /etc/resolv.conf


#sed -i '/#PermitRootLogin yes/c\PermitRootLogin without-password' /etc/ssh/sshd_config
sed -i '/GSSAPIAuthentication yes/c\GSSAPIAuthentication no' /etc/ssh/sshd_config
#echo "UseDNS no" >> /etc/ssh/sshd_config



echo "
###### oracle grid 18c kernel parameters #####
#semopm=100
#file-max=6815744
#rmem_default=262144
#rmem_max=4194304
#wmeqm_default=262144
#wmem_max=1048576
#aio-max-nr=1048576
fs.file-max = 6815744
kernel.sem = 250 32000 100 128
kernel.shmmni = 4096
kernel.shmall = 1073741824
kernel.shmmax = 4398046511104
kernel.panic_on_oops = 1
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576
net.ipv4.conf.all.rp_filter = 2
net.ipv4.conf.default.rp_filter = 2
fs.aio-max-nr = 1048576
net.ipv4.ip_local_port_range = 9000 65500

" >> /etc/sysctl.conf


## enable autologin
#sed -i -e 's#exec /sbin/mingetty $TTY#exec /sbin/mingetty --autologin root $TTY#' /etc/init/tty.conf
